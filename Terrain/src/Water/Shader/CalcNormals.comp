#version 430 core
#define M_PI 3.1415926535897932384626433832795

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(rgba32f, binding = 0) uniform image2D textureDisplacement;
layout(rgba32f, binding = 1) uniform image2D textureNormals;

void main() {
	ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
	

	vec4 a = imageLoad(textureDisplacement, ivec2(mod(pos - ivec2(0, 1.0), imageSize(textureDisplacement))));
	vec4 b = imageLoad(textureDisplacement, ivec2(mod(pos + ivec2(0, 1.0), imageSize(textureDisplacement))));
	vec4 c = imageLoad(textureDisplacement, ivec2(mod(pos - ivec2(1.0, 0), imageSize(textureDisplacement))));
	vec4 d = imageLoad(textureDisplacement, ivec2(mod(pos + ivec2(1.0, 0), imageSize(textureDisplacement))));
   

  
	float dyx = c.y - d.y;
	float dyz = a.y - b.y;
	float dxx = c.x - d.x;
	float dxz = a.x - b.x;
	float dzx = c.z - d.z;
	float dzz = a.z - b.z;
    
	float Jacobian = (1 + dxx) * (1 + dzz) - dxz * dzx;
	
	imageStore(textureNormals, pos, vec4(dyx, dyz, dxx, dzz));
	imageStore(textureDisplacement, pos, vec4(imageLoad(textureDisplacement, pos).rgb, Jacobian));
}