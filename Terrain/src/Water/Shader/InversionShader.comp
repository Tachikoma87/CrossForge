#version 430 core
#define M_PI 3.1415926535897932384626433832795

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(rgba32f, binding = 0) uniform image2D textureDisplacement;
layout(rgba32f, binding = 1) uniform image2D textureNormals;
layout(rgba32f, binding = 2) uniform image2D texturePingpong0;
layout(rgba32f, binding = 3) uniform image2D texturePingpong1;

uniform int gridSize;
uniform int pingpong;
uniform int text;

void main() {
	ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
	
	float perms[] = {1.0, -1.0};
	int index = int(mod((int(pos.x + pos.y)), 2));
	float perm = perms[index];

	float h = imageLoad(pingpong == 0 ? texturePingpong0 : texturePingpong1, pos).r;
	float h2 = imageLoad(pingpong == 0 ? texturePingpong0 : texturePingpong1, pos).b;

	float displacement = perm * (h / float(gridSize * gridSize));
	float displacement2 = perm * (h2 / float(gridSize * gridSize));

	vec4 oldColor = imageLoad(textureDisplacement, pos).rgba;
	vec4 oldColor2 = imageLoad(textureNormals, pos).rgba;

	if (text == 0) {
		imageStore(textureDisplacement, pos, vec4(displacement, 0, displacement2, 0));
	}
	else if (text == 1) {
		imageStore(textureDisplacement, pos, vec4(oldColor.r, displacement, oldColor.b, 0));
		imageStore(textureNormals, pos, vec4(displacement2, 0, 0, 0));
	}
	else if (text == 2) {
		imageStore(textureNormals, pos, vec4(displacement, displacement2, 0, 0));
	}
	else if (text == 3) {
		imageStore(textureNormals, pos, vec4(oldColor2.rg, displacement, displacement2));
		imageStore(textureDisplacement, pos, vec4(oldColor.rgb, (1 + displacement) * (1 + displacement2) - oldColor2.r * oldColor2.g));
	}

}